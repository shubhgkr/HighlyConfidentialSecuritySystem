/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.hcss.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.hcss.bean.LoginTO;
import com.hcss.cryptutil.Encryption;
import com.hcss.delegate.SecurityUserDelegate;
import com.hcss.exception.ConnectionException;
import com.hcss.exception.LoginException;
import com.hcss.utill.UtilConstants;

/**
 * MyEclipse Struts Creation date: 08-30-2012
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 * @struts.action-forward name="failure" path=
 *                        "/ChangePassword.jsp?status=Username Password Not Matched please try again"
 * @struts.action-forward name="success"
 *                        path="/Status.jsp?status=Password Changed  Successfully"
 */
public class ChangePasswordAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		// TODO Auto-generated method stub
		boolean flag = false;
		Encryption ec = new Encryption();
		int a[] = ec.ecies_ex(request.getParameter("newpassword"));
		String abc = "";
		for (int i = 0; i < a.length; i++) {
			abc = abc + a[i] + ",";
		}
		LoginTO loginTO = (LoginTO) form;
		loginTO.setNewpassword(abc);
		try {
			flag = new SecurityUserDelegate().changePass(loginTO);
			if (flag) {
				request.setAttribute("status", UtilConstants._PASSWORD_SUCCESS);
				return mapping.findForward("success");
			} else {
				request.setAttribute("status", UtilConstants._INVALID_USER);
				return mapping.findForward("failure");
			}
		} catch (ConnectionException e) {
			request.setAttribute("status", e.getMessage());
			return mapping.findForward("failure");
		}
	}

}